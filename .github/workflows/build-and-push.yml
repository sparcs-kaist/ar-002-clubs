name: "Build and Push Production Build"

on:
  workflow_call:
    secrets:
      ENV_VARS_FRONT:
        description: "Environment Variables in Client (@/front/.env)"
        required: true
      ENV_VARS_BACK:
        description: "Environment Variables in Server (@/back/.env)"
        required: true
      HOST:
        description: "Server Host"
        required: true
      USERNAME:
        description: "Server Username"
        required: true
      PASSWORD:
        description: "Server Password"
        required: true

jobs:
  publish-docker-image:
    name: "Build and Publish Latest Docker Image"
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./.docker/Front.Dockerfile
            image: ghcr.io/sparcs-kaist/sparcs-clubs-front
          - dockerfile: ./.docker/Back.Dockerfile
            image: ghcr.io/sparcs-kaist/sparcs-clubs-back

    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2

      # NOTE: Frontend variables are injected at this point because it is required in the build process
      #       Backend variables are injected in the server (or else it would be included in the container)
      - name: "Create .env File (Only Front)"
        run: |
          echo "Creating .env file"
          echo "${{ secrets.ENV_VARS_FRONT }}" >> front/.env
          echo "done"

      - name: "Log in to Github Container Registry"
        uses: docker/login-action@v2
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Extract Metadata"
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
          labels: latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-production-image:
    name: "Deploy Production Image in Server"
    needs: [publish-docker-image]
    runs-on: ubuntu-22.04
    steps:
      - name: "Run Remote Pull & Build Script"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            sudo /home/${{ secrets.USERNAME }}/redeploy.sh ${{ github.actor }} ${{ secrets.GITHUB_TOKEN }}
